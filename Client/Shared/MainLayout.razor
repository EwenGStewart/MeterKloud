@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inherits LayoutComponentBase
<MudThemeProvider IsDarkMode="@_isDarkMode" Theme="_mudTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<style>
     .TopAppBar {

        
    }
</style>

<MudLayout>
    <MudAppBar Elevation="1" Dense Class="px-4 TopAppBar" Gutters="false">
        
        <MudIconButton  Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudImage Src="/images/MeterKloudDrawTitleClear.png" ObjectFit="ObjectFit.Fill" Height="30" Class="mt-1"></MudImage>
        <MudSpacer />
        @if( this.DarkMode )
        {
            <MudIconButton Icon="@Icons.Material.Filled.WbSunny" Color="Color.Inherit" Edge="Edge.End" OnClick=@((e)=>SetDarkMode(false) ) aria-label="Turn off Dark Mode"  />                
        }
        else
        {
            <MudIconButton Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" Edge="Edge.End" OnClick=@((e)=>SetDarkMode(true) ) aria-label="Turn on Dark Mode"  />
        }

        
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2" Variant="DrawerVariant.Responsive" ClipMode="DrawerClipMode.Always">

 
        <MudNavMenu Bordered="@_drawerOpen" Rounded="@_drawerOpen" Class="mx-2" >
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Home" Href="/" Match="NavLinkMatch.All">Welcome</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Home" Href="/gettingStarted" >Getting Started</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.CloudUpload" Href="/upload">Upload</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.CloudDownload" Href="/download">Download</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Warehouse" Href="/sites">Sites</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Warehouse" Href="/site">Site Details</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Grade" Href="/graphDailyConsumption">Daily</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Gradient" Href="/graphDetailedConsumption">Detailed</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Grading" Href="/GraphHeatMap">HeatMap</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Grain" Href="/GraphProfileConsumption">Profile</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.GraphicEq" Href="/Graph3DConsumption">3D</MudNavLink>
            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.Grass" Href="/GraphDemand">Demand</MudNavLink>


            <MudNavLink Class="LeftMenuNavItem" Icon="@Icons.Material.Filled.AttachMoney" Href="/Tariffs">Tariffs</MudNavLink>
        </MudNavMenu>

    </MudDrawer>
    <MudMainContent  >
        @Body
    </MudMainContent>
</MudLayout>
@code {

    MudTheme _mudTheme = new MudTheme();
    bool _drawerOpen = true;
    bool _isDarkMode = false; 
    bool _localSettingsLoaded = false;

    protected override void OnInitialized()
    {
        _mudTheme = new MudTheme();
        _mudTheme.LayoutProperties.DrawerWidthLeft = "200px";
        _mudTheme.PaletteDark.DrawerBackground = "#000000";
        _mudTheme.PaletteLight.DrawerBackground = "#27272F";
        _mudTheme.PaletteLight.DrawerText = new MudBlazor.Utilities.MudColor(255, 255, 255, 0.8);
        _mudTheme.PaletteLight.DrawerIcon = new MudBlazor.Utilities.MudColor(255, 255, 255, 0.8);
        _mudTheme.PaletteLight.ActionDefault = new MudBlazor.Utilities.MudColor(0, 0, 0, 0.6);
        _mudTheme.PaletteLight.Primary = new MudBlazor.Utilities.MudColor("#1CCADD");
        _mudTheme.PaletteLight.HoverOpacity = .1;
        _mudTheme.PaletteLight.AppbarBackground = "#27272F";
        _mudTheme.PaletteLight.AppbarText = new MudBlazor.Utilities.MudColor(255, 255, 255, 0.99);
        _mudTheme.PaletteLight.Background = "f1f5f9";



        _mudTheme.PaletteDark.ActionDefault = new MudBlazor.Utilities.MudColor(255, 255, 255, 0.8);
        _mudTheme.PaletteDark.HoverOpacity = .1;
        _mudTheme.PaletteDark.Background = "#0f172a";
        _mudTheme.PaletteDark.DrawerBackground = "#182134";
        _mudTheme.PaletteDark.AppbarBackground = "#182134";
        _mudTheme.PaletteDark.TextPrimary = "#ffffff";
        _mudTheme.PaletteDark.BackgroundGray = "#1e293b";



        
        _mudTheme.Typography.H1.FontSize = "3rem";
        _mudTheme.Typography.H1.FontWeight = "800";
        _mudTheme.Typography.H2.FontSize = "1.5em";
        _mudTheme.Typography.H2.FontWeight = "400";
        if (! _localSettingsLoaded)
        {
            LoadLocalSettings();

        }


    }

    void LoadLocalSettings()
    {
        _isDarkMode = localStorage.GetItem<bool>("DarkMode");
        _localSettingsLoaded = true;
    }




    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }


    void DarkModeOn(MouseEvent e)
    {
        SetDarkMode(true);
    }

    void DarkModeOff(MouseEvent e)
    {
        SetDarkMode(false);
    }


    void SetDarkMode( bool mode)
    {
        DarkMode = mode;
    }
    
    public bool DarkMode
    {
        get
        {
            return _isDarkMode; 
        }
        set 
        {
            _isDarkMode = value; 
            localStorage.SetItem("DarkMode", value);
        }
    }

    

}